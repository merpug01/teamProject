<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300..700&display=swap" rel="stylesheet">
    <link href="styles.css" rel="stylesheet">
    <title>Example 4</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r61/three.min.js"></script>

    <style>
        body{
            background-color:black;
        }
        canvas {
            width:100%;
            height:100%;
        }
    </style>
    
</head>
<body>
  
    <nav class="navbar navbar-expand-lg navbar-dark" style="position:absolute; z-index: 100; background-color: (5,5,5,.5);">
    <div class="container">
        <a class="navbar-brand" href="#">Three.js Guide</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="index.htm">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="history.htm">History</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="use.htm">Use</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="install.htm">Installation</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="team.htm">Team</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Examples
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <li><a class="dropdown-item" href="example1.htm">Rotating Cubes</a></li>
                            <li><a class="dropdown-item" href="example2.htm">Storm</a></li>
                            <li><a class="dropdown-item" href="example3.htm">Rainbow Flare</a></li>
                            <li><a class="dropdown-item" href="example4.htm">Globe</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
    </nav>

    <script>

        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
        var renderer = new THREE.WebGLRenderer();

        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        /* Create Lights: PointLight / SpotLight etc.*/
            var spotLight = new THREE.SpotLight(0xffffff);
            spotLight.position.set(100,100,100);
            spotLight.castShadow = true; 
            spotLight.shadowMapWidth = 1024;
            spotLight.shadowMapHeight = 1024;
            spotLight.shadowCameraNear = 500;
            spotLight.shadowCameraFar = 4000;
            spotLight.shadowCameraFov = 30;
            scene.add(spotLight);

        /* Create Material */
            function Mat(){
                var material = new THREE.MeshPhongMaterial({
                    color      : new THREE.Color("rgb(35,35,213)"),  
                    emissive   : new THREE.Color("rgb(64,128,255)"),
                    specular   : new THREE.Color("rgb(93,195,255)"), 
                                                           
                                                            
                    shininess  : 1,                                  
                    shading    : THREE.FlatShading,                 
                    wireframe  : 1,                                  
                    transparent: 1,
                    opacity    : 0.15                               
                });
                return material;
            }

        /* Create Geometry */
            var geometry = new THREE.SphereGeometry(50,20,20,0,Math.PI*2,0,Math.PI);
        
        /* Create Earth Sphere*/
            var earth = new THREE.Mesh(geometry, Mat());

            scene.add(earth);

            camera.position.z = 90;
        
        function render(){
            requestAnimationFrame(render);
            earth.rotation.x += 0.01;
            earth.rotation.y += 0.01;
            renderer.render(scene, camera);
        }
        render();

    </script>
   
          <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
